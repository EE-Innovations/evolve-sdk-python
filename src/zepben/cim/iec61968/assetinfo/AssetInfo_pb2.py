"""
Copyright 2019 Zeppelin Bend Pty Ltd
This file is part of cimbend.

cimbend is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

cimbend is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with cimbend.  If not, see <https://www.gnu.org/licenses/>.
"""


# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/cim/iec61968/assetinfo/AssetInfo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.cim.iec61968.assetinfo import CableInfo_pb2 as zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_CableInfo__pb2
from zepben.cim.iec61968.assetinfo import OverheadWireInfo_pb2 as zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_OverheadWireInfo__pb2
from zepben.cim.iec61968.assetinfo import TransformerEndInfo_pb2 as zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_TransformerEndInfo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='zepben/cim/iec61968/assetinfo/AssetInfo.proto',
  package='zepben.cim.iec61968.assetinfo',
  syntax='proto3',
  serialized_options=_b('\n*com.zepben.protobuf.cim.iec61968.assetinfoP\001'),
  serialized_pb=_b('\n-zepben/cim/iec61968/assetinfo/AssetInfo.proto\x12\x1dzepben.cim.iec61968.assetinfo\x1a-zepben/cim/iec61968/assetinfo/CableInfo.proto\x1a\x34zepben/cim/iec61968/assetinfo/OverheadWireInfo.proto\x1a\x36zepben/cim/iec61968/assetinfo/TransformerEndInfo.proto\"\xf5\x01\n\tAssetInfo\x12=\n\tcableInfo\x18\x01 \x01(\x0b\x32(.zepben.cim.iec61968.assetinfo.CableInfoH\x00\x12K\n\x10overheadWireInfo\x18\x02 \x01(\x0b\x32/.zepben.cim.iec61968.assetinfo.OverheadWireInfoH\x00\x12O\n\x12transformerEndInfo\x18\x03 \x01(\x0b\x32\x31.zepben.cim.iec61968.assetinfo.TransformerEndInfoH\x00\x42\x0b\n\tassetInfoB.\n*com.zepben.protobuf.cim.iec61968.assetinfoP\x01\x62\x06proto3')
  ,
  dependencies=[zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_CableInfo__pb2.DESCRIPTOR,zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_OverheadWireInfo__pb2.DESCRIPTOR,zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_TransformerEndInfo__pb2.DESCRIPTOR,])




_ASSETINFO = _descriptor.Descriptor(
  name='AssetInfo',
  full_name='zepben.cim.iec61968.assetinfo.AssetInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cableInfo', full_name='zepben.cim.iec61968.assetinfo.AssetInfo.cableInfo', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='overheadWireInfo', full_name='zepben.cim.iec61968.assetinfo.AssetInfo.overheadWireInfo', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='transformerEndInfo', full_name='zepben.cim.iec61968.assetinfo.AssetInfo.transformerEndInfo', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='assetInfo', full_name='zepben.cim.iec61968.assetinfo.AssetInfo.assetInfo',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=238,
  serialized_end=483,
)

_ASSETINFO.fields_by_name['cableInfo'].message_type = zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_CableInfo__pb2._CABLEINFO
_ASSETINFO.fields_by_name['overheadWireInfo'].message_type = zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_OverheadWireInfo__pb2._OVERHEADWIREINFO
_ASSETINFO.fields_by_name['transformerEndInfo'].message_type = zepben_dot_cim_dot_iec61968_dot_assetinfo_dot_TransformerEndInfo__pb2._TRANSFORMERENDINFO
_ASSETINFO.oneofs_by_name['assetInfo'].fields.append(
  _ASSETINFO.fields_by_name['cableInfo'])
_ASSETINFO.fields_by_name['cableInfo'].containing_oneof = _ASSETINFO.oneofs_by_name['assetInfo']
_ASSETINFO.oneofs_by_name['assetInfo'].fields.append(
  _ASSETINFO.fields_by_name['overheadWireInfo'])
_ASSETINFO.fields_by_name['overheadWireInfo'].containing_oneof = _ASSETINFO.oneofs_by_name['assetInfo']
_ASSETINFO.oneofs_by_name['assetInfo'].fields.append(
  _ASSETINFO.fields_by_name['transformerEndInfo'])
_ASSETINFO.fields_by_name['transformerEndInfo'].containing_oneof = _ASSETINFO.oneofs_by_name['assetInfo']
DESCRIPTOR.message_types_by_name['AssetInfo'] = _ASSETINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AssetInfo = _reflection.GeneratedProtocolMessageType('AssetInfo', (_message.Message,), {
  'DESCRIPTOR' : _ASSETINFO,
  '__module__' : 'zepben.cim.iec61968.assetinfo.AssetInfo_pb2'
  # @@protoc_insertion_point(class_scope:zepben.cim.iec61968.assetinfo.AssetInfo)
  })
_sym_db.RegisterMessage(AssetInfo)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
