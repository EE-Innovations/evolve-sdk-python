"""
Copyright 2019 Zeppelin Bend Pty Ltd
This file is part of cimbend.

cimbend is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

cimbend is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with cimbend.  If not, see <https://www.gnu.org/licenses/>.
"""


# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from zepben.cim.iec61968.metering import MeterReading_pb2 as zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2
from zepben.cim.iec61968.metering import Meter_pb2 as zepben_dot_cim_dot_iec61968_dot_metering_dot_Meter__pb2
from zepben.cim.iec61970.base.core import BaseVoltage_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_core_dot_BaseVoltage__pb2
from zepben.cim.iec61970.base.diagramlayout import DiagramObject_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_diagramlayout_dot_DiagramObject__pb2
from zepben.cim.iec61970.base.wires import AcLineSegment_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_AcLineSegment__pb2
from zepben.cim.iec61970.base.wires import Breaker_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_Breaker__pb2
from zepben.cim.iec61970.base.wires import EnergyConsumer_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergyConsumer__pb2
from zepben.cim.iec61970.base.wires import EnergySource_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergySource__pb2
from zepben.cim.iec61970.base.wires import PerLengthSequenceImpedance_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PerLengthSequenceImpedance__pb2
from zepben.cim.iec61970.base.wires import PowerTransformer_pb2 as zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PowerTransformer__pb2
from zepben.postbox import pb_pb2 as zepben_dot_postbox_dot_pb__pb2


class NetworkDataStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.recordEnergySource = channel.unary_unary(
        '/zepben.pb.NetworkData/recordEnergySource',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergySource__pb2.EnergySource.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.ESResponse.FromString,
        )
    self.recordEnergyConsumer = channel.unary_unary(
        '/zepben.pb.NetworkData/recordEnergyConsumer',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergyConsumer__pb2.EnergyConsumer.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.ECResponse.FromString,
        )
    self.recordPowerTransformer = channel.unary_unary(
        '/zepben.pb.NetworkData/recordPowerTransformer',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PowerTransformer__pb2.PowerTransformer.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.PTResponse.FromString,
        )
    self.recordAcLineSegment = channel.unary_unary(
        '/zepben.pb.NetworkData/recordAcLineSegment',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_AcLineSegment__pb2.AcLineSegment.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.ACLSResponse.FromString,
        )
    self.recordDiagramObjectPoint = channel.unary_unary(
        '/zepben.pb.NetworkData/recordDiagramObjectPoint',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_diagramlayout_dot_DiagramObject__pb2.DiagramObject.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.Summary.FromString,
        )
    self.recordBreaker = channel.unary_unary(
        '/zepben.pb.NetworkData/recordBreaker',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_Breaker__pb2.Breaker.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.BreakerResponse.FromString,
        )
    self.createPerLengthSequenceImpedance = channel.unary_unary(
        '/zepben.pb.NetworkData/createPerLengthSequenceImpedance',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PerLengthSequenceImpedance__pb2.PerLengthSequenceImpedance.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.PLSIResponse.FromString,
        )
    self.createBaseVoltage = channel.unary_unary(
        '/zepben.pb.NetworkData/createBaseVoltage',
        request_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_core_dot_BaseVoltage__pb2.BaseVoltage.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.BVResponse.FromString,
        )
    self.createAssetInfo = channel.unary_unary(
        '/zepben.pb.NetworkData/createAssetInfo',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.AssetInfoRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.AIResponse.FromString,
        )
    self.createUsagePoint = channel.unary_unary(
        '/zepben.pb.NetworkData/createUsagePoint',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.UsagePointRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.UPResponse.FromString,
        )
    self.createMeter = channel.unary_unary(
        '/zepben.pb.NetworkData/createMeter',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.MeterRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterResponse.FromString,
        )
    self.getEquipmentContainer = channel.unary_stream(
        '/zepben.pb.NetworkData/getEquipmentContainer',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.Equipment.FromString,
        )
    self.getWholeNetwork = channel.unary_stream(
        '/zepben.pb.NetworkData/getWholeNetwork',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.Equipment.FromString,
        )
    self.getEnergySource = channel.unary_unary(
        '/zepben.pb.NetworkData/getEnergySource',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergySource__pb2.EnergySource.FromString,
        )
    self.getEnergyConsumer = channel.unary_unary(
        '/zepben.pb.NetworkData/getEnergyConsumer',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergyConsumer__pb2.EnergyConsumer.FromString,
        )
    self.getPowerTransformer = channel.unary_unary(
        '/zepben.pb.NetworkData/getPowerTransformer',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PowerTransformer__pb2.PowerTransformer.FromString,
        )
    self.getAcLineSegment = channel.unary_unary(
        '/zepben.pb.NetworkData/getAcLineSegment',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_AcLineSegment__pb2.AcLineSegment.FromString,
        )
    self.dumpEjson = channel.unary_unary(
        '/zepben.pb.NetworkData/dumpEjson',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Summary.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.Summary.FromString,
        )
    self.traceDirection = channel.unary_unary(
        '/zepben.pb.NetworkData/traceDirection',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Summary.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.Summary.FromString,
        )


class NetworkDataServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def recordEnergySource(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recordEnergyConsumer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recordPowerTransformer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recordAcLineSegment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recordDiagramObjectPoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def recordBreaker(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createPerLengthSequenceImpedance(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createBaseVoltage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createAssetInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createUsagePoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createMeter(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getEquipmentContainer(self, request, context):
    """**** Getters ****
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getWholeNetwork(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getEnergySource(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getEnergyConsumer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getPowerTransformer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getAcLineSegment(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def dumpEjson(self, request, context):
    """TEST FUNCTION, REMOVE LATER
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def traceDirection(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NetworkDataServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'recordEnergySource': grpc.unary_unary_rpc_method_handler(
          servicer.recordEnergySource,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergySource__pb2.EnergySource.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.ESResponse.SerializeToString,
      ),
      'recordEnergyConsumer': grpc.unary_unary_rpc_method_handler(
          servicer.recordEnergyConsumer,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergyConsumer__pb2.EnergyConsumer.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.ECResponse.SerializeToString,
      ),
      'recordPowerTransformer': grpc.unary_unary_rpc_method_handler(
          servicer.recordPowerTransformer,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PowerTransformer__pb2.PowerTransformer.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.PTResponse.SerializeToString,
      ),
      'recordAcLineSegment': grpc.unary_unary_rpc_method_handler(
          servicer.recordAcLineSegment,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_AcLineSegment__pb2.AcLineSegment.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.ACLSResponse.SerializeToString,
      ),
      'recordDiagramObjectPoint': grpc.unary_unary_rpc_method_handler(
          servicer.recordDiagramObjectPoint,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_diagramlayout_dot_DiagramObject__pb2.DiagramObject.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.Summary.SerializeToString,
      ),
      'recordBreaker': grpc.unary_unary_rpc_method_handler(
          servicer.recordBreaker,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_Breaker__pb2.Breaker.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.BreakerResponse.SerializeToString,
      ),
      'createPerLengthSequenceImpedance': grpc.unary_unary_rpc_method_handler(
          servicer.createPerLengthSequenceImpedance,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PerLengthSequenceImpedance__pb2.PerLengthSequenceImpedance.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.PLSIResponse.SerializeToString,
      ),
      'createBaseVoltage': grpc.unary_unary_rpc_method_handler(
          servicer.createBaseVoltage,
          request_deserializer=zepben_dot_cim_dot_iec61970_dot_base_dot_core_dot_BaseVoltage__pb2.BaseVoltage.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.BVResponse.SerializeToString,
      ),
      'createAssetInfo': grpc.unary_unary_rpc_method_handler(
          servicer.createAssetInfo,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.AssetInfoRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.AIResponse.SerializeToString,
      ),
      'createUsagePoint': grpc.unary_unary_rpc_method_handler(
          servicer.createUsagePoint,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.UsagePointRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.UPResponse.SerializeToString,
      ),
      'createMeter': grpc.unary_unary_rpc_method_handler(
          servicer.createMeter,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.MeterResponse.SerializeToString,
      ),
      'getEquipmentContainer': grpc.unary_stream_rpc_method_handler(
          servicer.getEquipmentContainer,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.Equipment.SerializeToString,
      ),
      'getWholeNetwork': grpc.unary_stream_rpc_method_handler(
          servicer.getWholeNetwork,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.Equipment.SerializeToString,
      ),
      'getEnergySource': grpc.unary_unary_rpc_method_handler(
          servicer.getEnergySource,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergySource__pb2.EnergySource.SerializeToString,
      ),
      'getEnergyConsumer': grpc.unary_unary_rpc_method_handler(
          servicer.getEnergyConsumer,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_EnergyConsumer__pb2.EnergyConsumer.SerializeToString,
      ),
      'getPowerTransformer': grpc.unary_unary_rpc_method_handler(
          servicer.getPowerTransformer,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_PowerTransformer__pb2.PowerTransformer.SerializeToString,
      ),
      'getAcLineSegment': grpc.unary_unary_rpc_method_handler(
          servicer.getAcLineSegment,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61970_dot_base_dot_wires_dot_AcLineSegment__pb2.AcLineSegment.SerializeToString,
      ),
      'dumpEjson': grpc.unary_unary_rpc_method_handler(
          servicer.dumpEjson,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Summary.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.Summary.SerializeToString,
      ),
      'traceDirection': grpc.unary_unary_rpc_method_handler(
          servicer.traceDirection,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Summary.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.Summary.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zepben.pb.NetworkData', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MeterReadingsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.createVoltageReading = channel.unary_unary(
        '/zepben.pb.MeterReadings/createVoltageReading',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.FromString,
        )
    self.createRealPowerReading = channel.unary_unary(
        '/zepben.pb.MeterReadings/createRealPowerReading',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.FromString,
        )
    self.createReactivePowerReading = channel.unary_unary(
        '/zepben.pb.MeterReadings/createReactivePowerReading',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.FromString,
        )
    self.sendMeterReading = channel.unary_unary(
        '/zepben.pb.MeterReadings/sendMeterReading',
        request_serializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_Meter__pb2.Meter.SerializeToString,
        response_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterResponse.FromString,
        )
    self.getMeterReadings = channel.unary_stream(
        '/zepben.pb.MeterReadings/getMeterReadings',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_Meter__pb2.Meter.FromString,
        )
    self.getVoltageReadings = channel.unary_stream(
        '/zepben.pb.MeterReadings/getVoltageReadings',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.FromString,
        )
    self.getRealPowerReadings = channel.unary_stream(
        '/zepben.pb.MeterReadings/getRealPowerReadings',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.FromString,
        )
    self.getReactivePowerReadings = channel.unary_stream(
        '/zepben.pb.MeterReadings/getReactivePowerReadings',
        request_serializer=zepben_dot_postbox_dot_pb__pb2.Identity.SerializeToString,
        response_deserializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.FromString,
        )


class MeterReadingsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def createVoltageReading(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createRealPowerReading(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def createReactivePowerReading(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def sendMeterReading(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getMeterReadings(self, request, context):
    """TODO: This will need to be much smarter and allow some form of bucketing readings.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getVoltageReadings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getRealPowerReadings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getReactivePowerReadings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MeterReadingsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'createVoltageReading': grpc.unary_unary_rpc_method_handler(
          servicer.createVoltageReading,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.SerializeToString,
      ),
      'createRealPowerReading': grpc.unary_unary_rpc_method_handler(
          servicer.createRealPowerReading,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.SerializeToString,
      ),
      'createReactivePowerReading': grpc.unary_unary_rpc_method_handler(
          servicer.createReactivePowerReading,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.MeterReadingRequest.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.MRResponse.SerializeToString,
      ),
      'sendMeterReading': grpc.unary_unary_rpc_method_handler(
          servicer.sendMeterReading,
          request_deserializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_Meter__pb2.Meter.FromString,
          response_serializer=zepben_dot_postbox_dot_pb__pb2.MeterResponse.SerializeToString,
      ),
      'getMeterReadings': grpc.unary_stream_rpc_method_handler(
          servicer.getMeterReadings,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_Meter__pb2.Meter.SerializeToString,
      ),
      'getVoltageReadings': grpc.unary_stream_rpc_method_handler(
          servicer.getVoltageReadings,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.SerializeToString,
      ),
      'getRealPowerReadings': grpc.unary_stream_rpc_method_handler(
          servicer.getRealPowerReadings,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.SerializeToString,
      ),
      'getReactivePowerReadings': grpc.unary_stream_rpc_method_handler(
          servicer.getReactivePowerReadings,
          request_deserializer=zepben_dot_postbox_dot_pb__pb2.Identity.FromString,
          response_serializer=zepben_dot_cim_dot_iec61968_dot_metering_dot_MeterReading__pb2.MeterReading.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'zepben.pb.MeterReadings', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
