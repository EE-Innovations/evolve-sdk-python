// Copyright 2019 Zeppelin Bend Pty Ltd
// This file is part of cimbend.
// 
// cimbend is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// cimbend is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with cimbend.  If not, see <https://www.gnu.org/licenses/>.


syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.zepben.protobuf.cim.iec61970.base.wires";
package zepben.cim.iec61970.base.wires;

import "zepben/cim/iec61970/base/diagramlayout/DiagramObject.proto";

/**
 * Sequence impedance and admittance parameters per unit length, for transposed lines of 1, 2, or 3 phases. For 1-phase lines, define x=x0=xself. For 2-phase lines, define x=xs-xm and x0=xs+xm.
 */
message PerLengthSequenceImpedance {

    /**
     * Master resource identifier issued by a model authority. The mRID is unique within an exchange context. Global uniqueness
     * is easily achieved by using a UUID,  as specified in RFC 4122, for the mRID. The use of UUID is strongly recommended.
     * <p>
     * For CIMXML data files in RDF syntax conforming to IEC 61970-552 Edition 1, the mRID is mapped to rdf:ID or rdf:about attributes
     * that identify CIM object elements.
     */
    string mRID = 1;

    /**
     * The name is any free human readable and possibly non unique text naming the object.
     */
    string name = 2;

    /**
     * Positive sequence series resistance, per unit of length.
     */
    double r = 3;

    /**
     * Positive sequence series reactance, per unit of length.
     */
    double x = 4;

    /**
     * Zero sequence series resistance, per unit of length.
     */
    double r0 = 5;

    /**
     * Zero sequence series reactance, per unit of length.
     */
    double x0 = 6;

    /**
     * Positive sequence shunt (charging) susceptance, per unit of length.
     */
    double bch = 7;

    /**
     * Zero sequence shunt (charging) susceptance, per unit of length.
     */
    double b0ch = 8;
    /**
     * The diagram objects that are associated with the domain object.
     * <p>
     * The diagram objects are returned in a map sorted by the diagram they live in.
     */
    repeated iec61970.base.diagramlayout.DiagramObject diagramObjects = 16;

}
